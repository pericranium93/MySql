!!!Транзакция включена в состав процедуры start_transaction!!! 

Проект базы данных для банка. В базе данных содержатся таблицы:
accounts - содержится информация о счетах пользователей
accounts_balance - представление, благодаря которому мы можем видеть общий баланс всех дебетовых счетов пользователей
adresses - таблица с адресами регистрации и фактического проживания клиентов
agreements - таблица хранит в себе номер договора, вид продукта и id клиента, с которым заключен договор
agreements_info - содержит поробную информацию о договоре
clients - содержится основная информация о клиентах
clients_info - подробная информация о клиентах
departments - список департаментов, подразделений и иных структкурных единиц организации
districts - список районов
division_codes - список кодов подразделений, осуществляющих выдачу паспортов
localities - список населенных пунктов РФ
passports - данные о паспортах клиентов
photos - фотобанк
positions - наименование должностей внутри банка
postcodes - список почтовых индексов
products - список всех продуктов банка
regions - области РФ
series - список серий паспортов
telemarketing - представление для выгрузки данных для отдела телемаркетинга
test - тестовая таблица
transactions - таблица с данными о денежных транзакциях клиентов
users - таблица с данными сотрудников банка. 

БД решает такие проблемы как: 
-хранение и упорядочивание основной информации о клиентах, сотрудниках, заключенных договорах, счетах и транзакциях;
-осуществление банковских транзакций;
-автоматизация процесса заключения договора и открытия счета.

Файл group_window request содержит запросы с использованием группировки и оконных функций. 
группировка так же использовалась в представлении accounts_balance, а оконные функции в представлении telemarketing.

Файл upd_tables.sql содержит запросы для обновления и создания данных в таблицах

Файл tables.sql содержит код для создания таблиц. Некоторые значения некорректны и корректировались через alter table в процессе работы

Файл views.sql содержит код представлений.

Файл FK.sql содержит код для создания внешних ключей 

Файл filldb.sql содержит код для заполения тестовыми данными из фейкера

Файл FMS.csv содержит список кодов подразделений

Файл indexes.sql содержит код написания индексов

Файл diagram.png содержит ER-диаграмму

Хранимые процедуры (файл procedures.sql)/функции (файл functions.sql):
create_account - процедура для открытия счета к договору и зачисления суммы на счет кредитного договора;
update_account - процедура для обновления тестовых данных;
start_transaction - процедура, содержащая транзакцию!, позволяющая осуществлять транзакции по счетам клиенто и автоматически учитывать их в таблице transactions;
upd_agr_info - процедура для обновления тестовых данных в таблице agreements_info;
get_next_id_passports - функция, иммитирующая работу auto_increment
get_amount - функция, возвращающая случайное значение в заданных границах для заполнения столбца amount
get_term - функция, возвращающая случайное значение в заданных границах для заполнения столбца term

Триггеры (triggers.sql):
validate_id_update - создан для блокирования возмсожности изменять id в таблице passports
validate_id_insert - Убирает возможность вставить иной id, кроме как следующий по порядку в таблице passports
agreements_info_insert_validation - Не позволяет вносить значения в таблицу agreements_info, если отсутствует информация о договоре в таблице argeements
agreements_insert_agreements_info - автоматически заполняет информацию о договоре после создания такового в таблице agreements
agreements_info_insert_accounts - вызывает процедуру создания счета после заполнения информации о договоре
accounts_update_validation - автоматически устанавливает баланс счета = 0 после его закрытия /*триггер не совсем корректный, т.к. для этого требуется своя процедура*/
clients_update_name - автоматически сохраняет информацию о предыдущих фамилии, имени и отчестве клиента. 



